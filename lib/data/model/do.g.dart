// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'do.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Do _$DoFromJson(Map<String, dynamic> json) => Do(
      idDo: json['idDo'] as int?,
      cdDo: json['cdDo'] as String?,
      descrizione: json['descrizione'] as String?,
      descrizioneBreve: json['descrizioneBreve'] as String?,
      tipoDocumento: json['tipoDocumento'] as String?,
      esecutivo: json['esecutivo'] as bool?,
      prelevabile: json['prelevabile'] as bool?,
      modificabile: json['modificabile'] as bool?,
      importiIvati: json['importiIvati'] as bool?,
      autoArchivia: json['autoArchivia'] as bool?,
      cAEnabled: json['cAEnabled'] as bool?,
      cAGenerate: json['cAGenerate'] as bool?,
      ivaPerRiga: json['ivaPerRiga'] as bool?,
      aggiornaUltimoCosto: json['aggiornaUltimoCosto'] as bool?,
      aggiornaUltimoCostoAM: json['aggiornaUltimoCostoAM'] as bool?,
      contabile: json['contabile'] as bool?,
      noteDo: json['noteDo'] as String?,
      cliFor: json['cliFor'] as String?,
      cdMGCausale: json['cdMGCausale'] as String?,
      cdCN: json['cdCN'] as String?,
      scontoCassa: json['scontoCassa'] as String?,
      scontoRiga: json['scontoRiga'] as String?,
      provvigioneRiga1: json['provvigioneRiga1'] as String?,
      provvigioneRiga2: json['provvigioneRiga2'] as String?,
      sconto: json['sconto'] as String?,
      provvigione: json['provvigione'] as String?,
      pkLstEnabled: json['pkLstEnabled'] as bool?,
      pkLstMode: json['pkLstMode'] as int?,
      pkLstFormat: json['pkLstFormat'] as String?,
      pkLstInputMask: json['pkLstInputMask'] as String?,
      mtrEnabled: json['mtrEnabled'] as bool?,
      mtrFormat: json['mtrFormat'] as String?,
      mtrInputMask: json['mtrInputMask'] as String?,
      segnoSCPrevista: json['segnoSCPrevista'] as int?,
      segnoFido: json['segnoFido'] as int?,
      segnoFatturato: json['segnoFatturato'] as int?,
      promozioniADataConsegna: json['promozioniADataConsegna'] as bool?,
      rREnabled: json['rREnabled'] as bool?,
      cGDefinitivo: json['cGDefinitivo'] as bool?,
      bloccaContabilizzati: json['bloccaContabilizzati'] as bool?,
      aRLottoAuto: json['aRLottoAuto'] as int?,
      uIChkGiacenza: json['uIChkGiacenza'] as bool?,
      uIChkDisponibile: json['uIChkDisponibile'] as bool?,
      uIChkDisponibileImmediato: json['uIChkDisponibileImmediato'] as bool?,
      uIPropDataOra: json['uIPropDataOra'] as bool?,
      uIRigaRifGenera: json['uIRigaRifGenera'] as bool?,
      uIRigaRifExp: json['uIRigaRifExp'] as String?,
      uIRigaRifPreleva: json['uIRigaRifPreleva'] as bool?,
      uIChkFido: json['uIChkFido'] as bool?,
      uIChkFidoBlk: json['uIChkFidoBlk'] as bool?,
      uIChkFidoBlkE: json['uIChkFidoBlkE'] as bool?,
      uIChkFidoVis: json['uIChkFidoVis'] as bool?,
      uIChkFidoFin: json['uIChkFidoFin'] as bool?,
      uIChkFidoBo: json['uIChkFidoBo'] as bool?,
      uIChkFidoOc: json['uIChkFidoOc'] as bool?,
      uIMgMovEdit: json['uIMgMovEdit'] as bool?,
      uIAbilitaTipoPC: json['uIAbilitaTipoPC'] as bool?,
      uIPropDataConsegna: json['uIPropDataConsegna'] as bool?,
      exportToADW: json['exportToADW'] as bool?,
      arrotondamentoN: (json['arrotondamentoN'] as num?)?.toDouble(),
      arrotondamentoC: json['arrotondamentoC'] as String?,
      dIEnabled: json['dIEnabled'] as bool?,
      dICheck: json['dICheck'] as bool?,
      userIns: json['userIns'] as String?,
      userUpd: json['userUpd'] as String?,
      timeIns: json['timeIns'] as String?,
      timeUpd: json['timeUpd'] as String?,
      ts: json['ts'] as String?,
      dIExecutive: json['dIExecutive'] as bool?,
      fTENoteTCon: json['fTENoteTCon'] as bool?,
      fTENoteRDes: json['fTENoteRDes'] as bool?,
      fTERigaRif: json['fTERigaRif'] as bool?,
      fTEDIRif: json['fTEDIRif'] as bool?,
      fTEDIRifTipo: (json['fTEDIRifTipo'] as num?)?.toDouble(),
      fTENoteTTipo: (json['fTENoteTTipo'] as num?)?.toDouble(),
      dISave: json['dISave'] as bool?,
      fTEAutoTipo: (json['fTEAutoTipo'] as num?)?.toDouble(),
      fTEAutoOnly: json['fTEAutoOnly'] as bool?,
      fTEScadenze: json['fTEScadenze'] as bool?,
      fTENotaIva: json['fTENotaIva'] as bool?,
      fTETipoScontoT: (json['fTETipoScontoT'] as num?)?.toDouble(),
      fTETipoScontoR: (json['fTETipoScontoR'] as num?)?.toDouble(),
      fTEAutoTD: json['fTEAutoTD'] as bool?,
      fTEAutoTDUI: json['fTEAutoTDUI'] as bool?,
      fTETutteLeRighe: json['fTETutteLeRighe'] as bool?,
    );

Map<String, dynamic> _$DoToJson(Do instance) => <String, dynamic>{
      'idDo': instance.idDo,
      'cdDo': instance.cdDo,
      'descrizione': instance.descrizione,
      'descrizioneBreve': instance.descrizioneBreve,
      'tipoDocumento': instance.tipoDocumento,
      'esecutivo': instance.esecutivo,
      'prelevabile': instance.prelevabile,
      'modificabile': instance.modificabile,
      'importiIvati': instance.importiIvati,
      'autoArchivia': instance.autoArchivia,
      'cAEnabled': instance.cAEnabled,
      'cAGenerate': instance.cAGenerate,
      'ivaPerRiga': instance.ivaPerRiga,
      'aggiornaUltimoCosto': instance.aggiornaUltimoCosto,
      'aggiornaUltimoCostoAM': instance.aggiornaUltimoCostoAM,
      'contabile': instance.contabile,
      'noteDo': instance.noteDo,
      'cliFor': instance.cliFor,
      'cdMGCausale': instance.cdMGCausale,
      'cdCN': instance.cdCN,
      'scontoCassa': instance.scontoCassa,
      'scontoRiga': instance.scontoRiga,
      'provvigioneRiga1': instance.provvigioneRiga1,
      'provvigioneRiga2': instance.provvigioneRiga2,
      'sconto': instance.sconto,
      'provvigione': instance.provvigione,
      'pkLstEnabled': instance.pkLstEnabled,
      'pkLstMode': instance.pkLstMode,
      'pkLstFormat': instance.pkLstFormat,
      'pkLstInputMask': instance.pkLstInputMask,
      'mtrEnabled': instance.mtrEnabled,
      'mtrFormat': instance.mtrFormat,
      'mtrInputMask': instance.mtrInputMask,
      'segnoSCPrevista': instance.segnoSCPrevista,
      'segnoFido': instance.segnoFido,
      'segnoFatturato': instance.segnoFatturato,
      'promozioniADataConsegna': instance.promozioniADataConsegna,
      'rREnabled': instance.rREnabled,
      'cGDefinitivo': instance.cGDefinitivo,
      'bloccaContabilizzati': instance.bloccaContabilizzati,
      'aRLottoAuto': instance.aRLottoAuto,
      'uIChkGiacenza': instance.uIChkGiacenza,
      'uIChkDisponibile': instance.uIChkDisponibile,
      'uIChkDisponibileImmediato': instance.uIChkDisponibileImmediato,
      'uIPropDataOra': instance.uIPropDataOra,
      'uIRigaRifGenera': instance.uIRigaRifGenera,
      'uIRigaRifExp': instance.uIRigaRifExp,
      'uIRigaRifPreleva': instance.uIRigaRifPreleva,
      'uIChkFido': instance.uIChkFido,
      'uIChkFidoBlk': instance.uIChkFidoBlk,
      'uIChkFidoBlkE': instance.uIChkFidoBlkE,
      'uIChkFidoVis': instance.uIChkFidoVis,
      'uIChkFidoFin': instance.uIChkFidoFin,
      'uIChkFidoBo': instance.uIChkFidoBo,
      'uIChkFidoOc': instance.uIChkFidoOc,
      'uIMgMovEdit': instance.uIMgMovEdit,
      'uIAbilitaTipoPC': instance.uIAbilitaTipoPC,
      'uIPropDataConsegna': instance.uIPropDataConsegna,
      'exportToADW': instance.exportToADW,
      'arrotondamentoN': instance.arrotondamentoN,
      'arrotondamentoC': instance.arrotondamentoC,
      'dIEnabled': instance.dIEnabled,
      'dICheck': instance.dICheck,
      'userIns': instance.userIns,
      'userUpd': instance.userUpd,
      'timeIns': instance.timeIns,
      'timeUpd': instance.timeUpd,
      'ts': instance.ts,
      'dIExecutive': instance.dIExecutive,
      'fTENoteTCon': instance.fTENoteTCon,
      'fTENoteRDes': instance.fTENoteRDes,
      'fTERigaRif': instance.fTERigaRif,
      'fTEDIRif': instance.fTEDIRif,
      'fTEDIRifTipo': instance.fTEDIRifTipo,
      'fTENoteTTipo': instance.fTENoteTTipo,
      'dISave': instance.dISave,
      'fTEAutoTipo': instance.fTEAutoTipo,
      'fTEAutoOnly': instance.fTEAutoOnly,
      'fTEScadenze': instance.fTEScadenze,
      'fTENotaIva': instance.fTENotaIva,
      'fTETipoScontoT': instance.fTETipoScontoT,
      'fTETipoScontoR': instance.fTETipoScontoR,
      'fTEAutoTD': instance.fTEAutoTD,
      'fTEAutoTDUI': instance.fTEAutoTDUI,
      'fTETutteLeRighe': instance.fTETutteLeRighe,
    };
