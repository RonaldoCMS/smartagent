// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'dorig.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Dorig _$DorigFromJson(Map<String, dynamic> json) => Dorig(
      idDORig: json['id_DORig'] as int?,
      idDOTes: json['id_DOTes'] as int?,
      contabile: json['contabile'] as bool?,
      numeroDoc: json['numeroDoc'] as String?,
      dataDoc: json['dataDoc'] as String?,
      cdMGEsercizio: json['cd_MGEsercizio'] as String?,
      cdDO: json['cd_DO'] as String?,
      tipoDocumento: json['tipoDocumento'] as String?,
      cdCF: json['cd_CF'] as String?,
      cdVL: json['cd_VL'] as String?,
      cambio: (json['cambio'] as num?)?.toDouble(),
      decimali: json['decimali'] as int?,
      decimaliPrzUn: json['decimaliPrzUn'] as int?,
      riga: json['riga'] as int?,
      cdMGCausale: json['cd_MGCausale'] as String?,
      tipoPC: json['tipoPC'] as String?,
      cdMGP: json['cd_MG_P'] as String?,
      cdAR: json['cd_AR'] == null
          ? null
          : AR.fromJson(json['cd_AR'] as Map<String, dynamic>),
      descrizione: json['descrizione'] as String?,
      cdARMisura: json['cd_ARMisura'] as String?,
      cdCGConto: json['cd_CGConto'] as String?,
      cdAliquota: json['cd_Aliquota'] as String?,
      cdAliquotaR: json['cd_Aliquota_R'] as String?,
      tipoRigaRif: json['tipoRigaRif'] as String?,
      qta: (json['qta'] as num?)?.toDouble(),
      fattoreToUM1: (json['fattoreToUM1'] as num?)?.toDouble(),
      qtaEvadibile: (json['qtaEvadibile'] as num?)?.toDouble(),
      qtaEvasa: (json['qtaEvasa'] as num?)?.toDouble(),
      prezzoUnitarioV: (json['prezzoUnitarioV'] as num?)?.toDouble(),
      scontoRiga: json['scontoRiga'] as String?,
      prezzoAddizionaleV: (json['prezzoAddizionaleV'] as num?)?.toDouble(),
      prezzoTotaleV: (json['prezzoTotaleV'] as num?)?.toDouble(),
      prezzoTotaleMovFree: json['prezzoTotaleMovFree'] as bool?,
      prezzoTotaleMovE: (json['prezzoTotaleMovE'] as num?)?.toDouble(),
      omaggio: json['omaggio'] as int?,
      provvigioneRiga1: json['provvigioneRiga_1'] as String?,
      provvigioneRiga2: json['provvigioneRiga_2'] as String?,
      dataConsegna: json['dataConsegna'] as String?,
      dataConsegnaR: json['dataConsegna_R'] as String?,
      noteRiga: json['noteRiga'] as String?,
      evasa: json['evasa'] as bool?,
      evadibile: json['evadibile'] as bool?,
      esecutivo: json['esecutivo'] as bool?,
      reserved1: json['reserved_1'] as String?,
      cAPartenza: json['cAPartenza'] as int?,
      cADurata: json['cADurata'] as int?,
      scontoAddizionale: json['scontoAddizionale'] as String?,
      fattoreScontoRiga: (json['fattoreScontoRiga'] as num?)?.toDouble(),
      fattoreScontoAddizionale:
          (json['fattoreScontoAddizionale'] as num?)?.toDouble(),
      fattoreScontoTotale: (json['fattoreScontoTotale'] as num?)?.toDouble(),
      fattoreProvv1: (json['fattoreProvv_1'] as num?)?.toDouble(),
      fattoreProvv2: (json['fattoreProvv_2'] as num?)?.toDouble(),
      scontoTotale: json['scontoTotale'] as String?,
      noteXML: json['noteXML'] as String?,
      userIns: json['userIns'] as String?,
      userUpd: json['userUpd'] as String?,
      timeIns: json['timeIns'] as String?,
      timeUpd: json['timeUpd'] as String?,
      ts: json['ts'] as String?,
      importiIvati: json['importiIvati'] as bool?,
      doIntentoFix: json['doIntentoFix'] as bool?,
      extraInfoPresent: json['extraInfoPresent'] as bool?,
      prezzoResiduoV: (json['prezzoResiduoV'] as num?)?.toDouble(),
      prezzoResiduoE: (json['prezzoResiduoE'] as num?)?.toDouble(),
      prezzoTotaleE: (json['prezzoTotaleE'] as num?)?.toDouble(),
      prezzoUnitarioScontatoV:
          (json['prezzoUnitarioScontatoV'] as num?)?.toDouble(),
      valProvvigione1: (json['valProvvigione_1'] as num?)?.toDouble(),
      valProvvigione2: (json['valProvvigione_2'] as num?)?.toDouble(),
      cadurata: json['cadurata'] as int?,
      capartenza: json['capartenza'] as int?,
    );

Map<String, dynamic> _$DorigToJson(Dorig instance) => <String, dynamic>{
      'id_DORig': instance.idDORig,
      'id_DOTes': instance.idDOTes,
      'contabile': instance.contabile,
      'numeroDoc': instance.numeroDoc,
      'dataDoc': instance.dataDoc,
      'cd_MGEsercizio': instance.cdMGEsercizio,
      'cd_DO': instance.cdDO,
      'tipoDocumento': instance.tipoDocumento,
      'cd_CF': instance.cdCF,
      'cd_VL': instance.cdVL,
      'cambio': instance.cambio,
      'decimali': instance.decimali,
      'decimaliPrzUn': instance.decimaliPrzUn,
      'riga': instance.riga,
      'cd_MGCausale': instance.cdMGCausale,
      'tipoPC': instance.tipoPC,
      'cd_MG_P': instance.cdMGP,
      'cd_AR': instance.cdAR,
      'descrizione': instance.descrizione,
      'cd_ARMisura': instance.cdARMisura,
      'cd_CGConto': instance.cdCGConto,
      'cd_Aliquota': instance.cdAliquota,
      'cd_Aliquota_R': instance.cdAliquotaR,
      'tipoRigaRif': instance.tipoRigaRif,
      'qta': instance.qta,
      'fattoreToUM1': instance.fattoreToUM1,
      'qtaEvadibile': instance.qtaEvadibile,
      'qtaEvasa': instance.qtaEvasa,
      'prezzoUnitarioV': instance.prezzoUnitarioV,
      'scontoRiga': instance.scontoRiga,
      'prezzoAddizionaleV': instance.prezzoAddizionaleV,
      'prezzoTotaleV': instance.prezzoTotaleV,
      'prezzoTotaleMovFree': instance.prezzoTotaleMovFree,
      'prezzoTotaleMovE': instance.prezzoTotaleMovE,
      'omaggio': instance.omaggio,
      'provvigioneRiga_1': instance.provvigioneRiga1,
      'provvigioneRiga_2': instance.provvigioneRiga2,
      'dataConsegna': instance.dataConsegna,
      'dataConsegna_R': instance.dataConsegnaR,
      'noteRiga': instance.noteRiga,
      'evasa': instance.evasa,
      'evadibile': instance.evadibile,
      'esecutivo': instance.esecutivo,
      'reserved_1': instance.reserved1,
      'cAPartenza': instance.cAPartenza,
      'cADurata': instance.cADurata,
      'scontoAddizionale': instance.scontoAddizionale,
      'fattoreScontoRiga': instance.fattoreScontoRiga,
      'fattoreScontoAddizionale': instance.fattoreScontoAddizionale,
      'fattoreScontoTotale': instance.fattoreScontoTotale,
      'fattoreProvv_1': instance.fattoreProvv1,
      'fattoreProvv_2': instance.fattoreProvv2,
      'scontoTotale': instance.scontoTotale,
      'noteXML': instance.noteXML,
      'userIns': instance.userIns,
      'userUpd': instance.userUpd,
      'timeIns': instance.timeIns,
      'timeUpd': instance.timeUpd,
      'ts': instance.ts,
      'importiIvati': instance.importiIvati,
      'doIntentoFix': instance.doIntentoFix,
      'extraInfoPresent': instance.extraInfoPresent,
      'prezzoResiduoV': instance.prezzoResiduoV,
      'prezzoResiduoE': instance.prezzoResiduoE,
      'prezzoTotaleE': instance.prezzoTotaleE,
      'prezzoUnitarioScontatoV': instance.prezzoUnitarioScontatoV,
      'valProvvigione_1': instance.valProvvigione1,
      'valProvvigione_2': instance.valProvvigione2,
      'cadurata': instance.cadurata,
      'capartenza': instance.capartenza,
    };
