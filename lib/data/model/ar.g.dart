// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'ar.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

AR _$ARFromJson(Map<String, dynamic> json) => AR(
      idAR: json['id_AR'] as int?,
      cdAR: json['cd_AR'] as String?,
      descrizione: json['descrizione'] as String?,
      descrizioneBreve: json['descrizioneBreve'] as String?,
      noteAR: json['note_AR'] as String?,
      gruppo3: json['gruppo3'] == null
          ? null
          : Gruppo3.fromJson(json['gruppo3'] as Map<String, dynamic>),
      gruppo2: json['gruppo2'] == null
          ? null
          : Gruppo2.fromJson(json['gruppo2'] as Map<String, dynamic>),
      gruppo1: json['gruppo1'] == null
          ? null
          : Gruppo1.fromJson(json['gruppo1'] as Map<String, dynamic>),
      cdAliquotaA: json['cd_Aliquota_A'] as String?,
      cdAliquotaV: json['cd_Aliquota_V'] as String?,
      cdCGContoVI: json['cd_CGConto_VI'] as String?,
      cdCGContoVE: json['cd_CGConto_VE'] as String?,
      cdCGContoAI: json['cd_CGConto_AI'] as String?,
      idARCategoria: json['id_ARCategoria'] as int?,
      intraTipo: json['intraTipo'] as String?,
      modello: json['modello'] as String?,
      sconto: json['sconto'] as String?,
      provvigione: json['provvigione'] as String?,
      ricarica: json['ricarica'] as String?,
      scortaMinima: (json['scortaMinima'] as num?)?.toDouble(),
      scortaMassima: (json['scortaMassima'] as num?)?.toDouble(),
      lottoMinimo: (json['lottoMinimo'] as num?)?.toDouble(),
      lottoRiordino: (json['lottoRiordino'] as num?)?.toDouble(),
      pesoLordo: (json['pesoLordo'] as num?)?.toDouble(),
      pesoNetto: (json['pesoNetto'] as num?)?.toDouble(),
      pesoFattore: (json['pesoFattore'] as num?)?.toDouble(),
      pesoLordoMks: (json['pesoLordoMks'] as num?)?.toDouble(),
      pesoNettoMks: (json['pesoNettoMks'] as num?)?.toDouble(),
      altezza: (json['altezza'] as num?)?.toDouble(),
      lunghezza: (json['lunghezza'] as num?)?.toDouble(),
      larghezza: (json['larghezza'] as num?)?.toDouble(),
      dimensioniFattore: (json['dimensioniFattore'] as num?)?.toDouble(),
      altezzaMks: (json['altezzaMks'] as num?)?.toDouble(),
      lunghezzaMks: (json['lunghezzaMks'] as num?)?.toDouble(),
      larghezzaMks: (json['larghezzaMks'] as num?)?.toDouble(),
      volumeMks: (json['volumeMks'] as num?)?.toDouble(),
      costoStandard: (json['costoStandard'] as num?)?.toDouble(),
      classeAbc: json['classeAbc'] as String?,
      tipoValorizzazione: json['tipoValorizzazione'] as int?,
      fittizio: json['fittizio'] as bool?,
      obsoleto: json['obsoleto'] as bool?,
      dBKit: json['dBKit'] as bool?,
      noInventario: json['noInventario'] as bool?,
      noGiornale: json['noGiornale'] as bool?,
      dBFantasma: json['dBFantasma'] as bool?,
      mGLottoObbligatorio: json['mG_LottoObbligatorio'] as bool?,
      mGMatricolaObbligatoria: json['mG_MatricolaObbligatoria'] as bool?,
      mGGiacenzaNonNegativa: json['mG_GiacenzaNonNegativa'] as bool?,
      tipoGestComm: (json['tipoGestComm'] as num?)?.toDouble(),
      mrpGiorniRiordino: (json['mrpGiorniRiordino'] as num?)?.toDouble(),
      mrpProduzioneMassima: (json['mrpProduzioneMassima'] as num?)?.toDouble(),
      mrpIncludi: json['mrpIncludi'] as bool?,
      mrpGiorniCopertura: (json['mrpGiorniCopertura'] as num?)?.toDouble(),
      mrpResa: (json['mrpResa'] as num?)?.toDouble(),
      mrpLottoRiordino: json['mrpLottoRiordino'] as bool?,
      mrpLottoMinimo: json['mrpLottoMinimo'] as bool?,
      mrpPuntoRiordino: (json['mrpPuntoRiordino'] as num?)?.toDouble(),
      mrpIgnoraDistinta: json['mrpIgnoraDistinta'] as bool?,
      webB2CPubblica: json['webB2CPubblica'] as bool?,
      webB2BPubblica: json['webB2BPubblica'] as bool?,
      webDescrizione: json['webDescrizione'] as String?,
      webNoteAR: json['webNote_AR'] as String?,
      webInfoLink: json['webInfoLink'] as String?,
      webGiacenza: (json['webGiacenza'] as num?)?.toDouble(),
      amsManaged: json['amsManaged'] as bool?,
      attributi: json['attributi'] as String?,
      userIns: json['userIns'] as String?,
      userUpd: json['userUpd'] as String?,
      timeIns: json['timeIns'] as String?,
      timeUpd: json['timeUpd'] as String?,
      ts: json['ts'] as String?,
      cdARClasse12: json['cd_ARClasse12'] as String?,
      cdARClasse123: json['Ccd_ARClasse123'] as String?,
      cdARGruppo12: json['cd_ARGruppo12'] as String?,
      cdARGruppo123: json['cd_ARGruppo123'] as String?,
    )
      ..classe1 = json['classe1'] == null
          ? null
          : ARClasse1.fromJson(json['classe1'] as Map<String, dynamic>)
      ..classe2 = json['classe2'] == null
          ? null
          : ARClasse2.fromJson(json['classe2'] as Map<String, dynamic>)
      ..classe3 = json['classe3'] == null
          ? null
          : ARClasse3.fromJson(json['classe3'] as Map<String, dynamic>)
      ..marca = json['marca'] == null
          ? null
          : ARMarca.fromJson(json['marca'] as Map<String, dynamic>)
      ..misura = json['misura'] == null
          ? null
          : ARMisura.fromJson(json['misura'] as Map<String, dynamic>);

Map<String, dynamic> _$ARToJson(AR instance) => <String, dynamic>{
      'id_AR': instance.idAR,
      'cd_AR': instance.cdAR,
      'descrizione': instance.descrizione,
      'descrizioneBreve': instance.descrizioneBreve,
      'note_AR': instance.noteAR,
      'gruppo3': instance.gruppo3,
      'gruppo2': instance.gruppo2,
      'gruppo1': instance.gruppo1,
      'classe1': instance.classe1,
      'classe2': instance.classe2,
      'classe3': instance.classe3,
      'cd_Aliquota_A': instance.cdAliquotaA,
      'cd_Aliquota_V': instance.cdAliquotaV,
      'cd_CGConto_VI': instance.cdCGContoVI,
      'cd_CGConto_VE': instance.cdCGContoVE,
      'cd_CGConto_AI': instance.cdCGContoAI,
      'marca': instance.marca,
      'id_ARCategoria': instance.idARCategoria,
      'intraTipo': instance.intraTipo,
      'modello': instance.modello,
      'sconto': instance.sconto,
      'provvigione': instance.provvigione,
      'ricarica': instance.ricarica,
      'scortaMinima': instance.scortaMinima,
      'scortaMassima': instance.scortaMassima,
      'lottoMinimo': instance.lottoMinimo,
      'lottoRiordino': instance.lottoRiordino,
      'misura': instance.misura,
      'pesoLordo': instance.pesoLordo,
      'pesoNetto': instance.pesoNetto,
      'pesoFattore': instance.pesoFattore,
      'pesoLordoMks': instance.pesoLordoMks,
      'pesoNettoMks': instance.pesoNettoMks,
      'altezza': instance.altezza,
      'lunghezza': instance.lunghezza,
      'larghezza': instance.larghezza,
      'dimensioniFattore': instance.dimensioniFattore,
      'altezzaMks': instance.altezzaMks,
      'lunghezzaMks': instance.lunghezzaMks,
      'larghezzaMks': instance.larghezzaMks,
      'volumeMks': instance.volumeMks,
      'costoStandard': instance.costoStandard,
      'classeAbc': instance.classeAbc,
      'tipoValorizzazione': instance.tipoValorizzazione,
      'fittizio': instance.fittizio,
      'obsoleto': instance.obsoleto,
      'dBKit': instance.dBKit,
      'noInventario': instance.noInventario,
      'noGiornale': instance.noGiornale,
      'dBFantasma': instance.dBFantasma,
      'mG_LottoObbligatorio': instance.mGLottoObbligatorio,
      'mG_MatricolaObbligatoria': instance.mGMatricolaObbligatoria,
      'mG_GiacenzaNonNegativa': instance.mGGiacenzaNonNegativa,
      'tipoGestComm': instance.tipoGestComm,
      'mrpGiorniRiordino': instance.mrpGiorniRiordino,
      'mrpProduzioneMassima': instance.mrpProduzioneMassima,
      'mrpIncludi': instance.mrpIncludi,
      'mrpGiorniCopertura': instance.mrpGiorniCopertura,
      'mrpResa': instance.mrpResa,
      'mrpLottoRiordino': instance.mrpLottoRiordino,
      'mrpLottoMinimo': instance.mrpLottoMinimo,
      'mrpPuntoRiordino': instance.mrpPuntoRiordino,
      'mrpIgnoraDistinta': instance.mrpIgnoraDistinta,
      'webB2CPubblica': instance.webB2CPubblica,
      'webB2BPubblica': instance.webB2BPubblica,
      'webDescrizione': instance.webDescrizione,
      'webNote_AR': instance.webNoteAR,
      'webInfoLink': instance.webInfoLink,
      'webGiacenza': instance.webGiacenza,
      'amsManaged': instance.amsManaged,
      'attributi': instance.attributi,
      'userIns': instance.userIns,
      'userUpd': instance.userUpd,
      'timeIns': instance.timeIns,
      'timeUpd': instance.timeUpd,
      'ts': instance.ts,
      'cd_ARClasse12': instance.cdARClasse12,
      'Ccd_ARClasse123': instance.cdARClasse123,
      'cd_ARGruppo12': instance.cdARGruppo12,
      'cd_ARGruppo123': instance.cdARGruppo123,
    };
